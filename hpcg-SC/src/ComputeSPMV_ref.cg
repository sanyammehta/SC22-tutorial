       /*  
        *  Cray Inc. Decompilation
        *  Notice - This output is provided for information only.
        *  
        *  Cray Inc. reserves the right to change the format of this
        *  information at any time and does not guarantee the
        *  readability or accuracy of this information.
        *  
        *  This information may not be compilable and corresponds to
        *  the internal representation of the program during the
        *  optimization phase of the compilation process.
        *  
        *  Source                :  ComputeSPMV_ref.cpp
        *  File                  :  /cray/css/users/smehta/hpcg/src/ComputeSPMV_ref.cg
        *  Network               :  Aries interconnect
        *  Target                :  arm-sve[width=1024] :: sve, fma
        */  
   47. 
   47. int
   47. ComputeSPMV_ref( A, x, y )
   47. {
   49.    $GVN_A_5 = A;
   49.    $GVN_A_3 = (long) $GVN_A_5;
   49.    $GVN_x_6 = x;
   49.    $GVN_x_4 = (long) $GVN_x_6;
   49.    if ( 0[$GVN_x_4,0] < 9[$GVN_A_3,0] ) {
   49.       __assert_fail( &88[&@cfe_static_2412].B, &128[&@cfe_static_2412].B, 49, @cfe_static_2412 );
   49.    }
   50.    $GVN_y_2 = (long) y;
   50.    if ( 0[$GVN_y_2,0] < 8[$GVN_A_3,0] ) {
   50.       __assert_fail( &152[&@cfe_static_2412].B, &128[&@cfe_static_2412].B, 50, @cfe_static_2412 );
   50.    }
   53.    ExchangeHalo( $GVN_A_5, $GVN_x_6 );
   55.    $xv_S5 = 1[$GVN_x_4,0].L;
   56.    $yv_S7 = 1[$GVN_y_2,0].L;
   57.    $nrow_S0 = 8[$GVN_A_3,0];
   61.    if ( 0 < $nrow_S0 ) {
   61.       $i_S8 = 0;
   61.       $T_$I_i_2_H0 = $nrow_S0;
   69.       $LIS_0_1[0:16:1,a32].L = _bcst( 0.0, 16 );
   61.       do {
   62.          $SC_sum_I0 = 0.0;
   63.          $cur_vals_S6 = 0[(long)( 9[$GVN_A_3,0].L ),$i_S8].L;
   64.          $cur_inds_S4 = 0[(long)( 8[$GVN_A_3,0].L ),$i_S8].L;
   65.          $cur_nnz_S2 = (int)( 0[$i_S8 + (long)( 6[$GVN_A_3,0].L )].B );
   68.          if ( 0 < $cur_nnz_S2 ) {
   68.             $j_S12 = 0;
   68.             $T_$I_j_0_H1 = $cur_nnz_S2;
   68.             if ( $T_$I_j_0_H1 >= 16 ) /*  99.50%  */{
   68.                $TC_4 = -16 & $T_$I_j_0_H1;
   69.                $VR_sum_7[0:16:1,a32].L = $LIS_0_1[0:16:1,a32].L;
   68.                $LC_S9 = -$TC_4;
   69.                $SR_S11 = (long) $cur_vals_S6;
   69.                $SR_S10 = (long) $cur_inds_S4;
   68.                if ( $LC_S9 < -47 ) {
   68.                   $Induc01_J0 = -47 + $TC_4;
   68.                   do {
   69.                      $VR_sum_7[0:16:1,a32].L = _fmadd( 32[$SR_S11:16:1,a8].L, 0[(long) $xv_S5:16:32[$SR_S10:16:1,a4],a8].L, _fmadd( 16[$SR_S11:16:1,a8].L, 0[(long) $xv_S5:16:16[$SR_S10:16:1,a4],a8].L, _fmadd( 0[$SR_S11:16:1,a8].L, 0[(long) $xv_S5:16:0[$SR_S10:16:1,a4],a8].L, $VR_sum_7[0:16:1,a32].L ) ) );
   69.                      $SR_S11 += 384;
   69.                      $SR_S10 += 192;
   68.                      $LC_S9 += 48;
   68.                      $Induc01_J0 -= 48;
   70.                   } while ( $Induc01_J0 > 0 );
   70.                }
   68.                if ( $LC_S9 < 0 ) {
   68.                   do {
   69.                      $VR_sum_7[0:16:1,a32].L = _fmadd( 0[$SR_S11:16:1,a8].L, 0[(long) $xv_S5:16:0[$SR_S10:16:1,a4],a8].L, $VR_sum_7[0:16:1,a32].L );
   69.                      $SR_S11 += 128;
   69.                      $SR_S10 += 64;
   68.                      $LC_S9 += 16;
   70.                   } while ( $LC_S9 < 0 );
   70.                }
   69.                $SC_sum_I0 = _rpls( $VR_sum_7[0:16:1,a32].L, 16, 1 );
   68.                $j_S12 = $TC_4;
   68.             }
   68.             if ( $T_$I_j_0_H1 > $j_S12 ) /*  99.50%  */{
   68.                do {
   69.                   $SC_sum_I0 = _fmadd( 0[(long) $cur_vals_S6,$j_S12].L, 0[(long) $xv_S5,0[(long) $cur_inds_S4,$j_S12]].L, $SC_sum_I0 );
   68.                   $j_S12++;
   70.                } while ( $j_S12 < $T_$I_j_0_H1 );
   70.             }
   70.          }
   71.          0[(long) $yv_S7,$i_S8].L = $SC_sum_I0;
   61.          $i_S8++;
   72.       } while ( $i_S8 < $T_$I_i_2_H0 );
   72.    }
   74.    return 0;
   74. }
   74. 
